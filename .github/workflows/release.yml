
on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]*'

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          
      - name: Npm install
        run: npm install

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache vendor
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ env.cache-name }}-
            ${{ runner.os }}-composer-
            ${{ runner.os }}-

      - name: Composer install
        run: composer install

      - name: Npm build
        run: npm run build

      - name: Create zip file
        run: npm run zip

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag}" \
              --generate-notes

      - name: Upload Release Asset
        id: upload-release-asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$tag" ./biblio.zip \
              --repo="$GITHUB_REPOSITORY"