$background: #2d303e;
$comment:    #6272A4;
$foreground: #F8F8F2;
$selection:  #44475A;
$linenumber: #999;

$cyan:       #8BE9FD;
$green:      #50FA7B;
$orange:     #FFB86C;
$pink:       #FF79C6;
$purple:     #c59efa;
$red:        #FF5555;
$yellow:     #F1FA8C;



// base
pre[class*="language-"] {
  background: $background;
  overflow: auto;
  height: auto;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
  background: $background;
}

pre[class*="language-"],
code[class*="language-"] {
  color: $foreground;
  background: $background;
  text-shadow: none;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  tab-size: 4;
  hyphens: none;
// selection
  &::selection,
  ::selection {
    text-shadow: none;
    background-color: $selection;
  }
}

// Line numbers
pre.line-numbers {
  position: relative;
  padding-left: 2.8em;
  counter-reset: linenumber;
  > code {
    position: relative;
    white-space: inherit;
  }
}

.line-numbers-rows {
  position: absolute;
  pointer-events: none;
  top: 0;
  font-size: 100%;
  left: -2.8em;
  width: 2em; /* works for line-numbers below 1000 lines */
  letter-spacing: -1px;
  border-right: 1px solid $linenumber;
  user-select: none;
}

.line-numbers-rows > span {
  pointer-events: none;
  display: block;
  counter-increment: linenumber;
  &::before {
    content: counter(linenumber);
    color: $linenumber;
    display: block;
    padding-right: 0.8em;
    text-align: right;
  }
}


// Remove text shadow for printing
@media print {
  code[class*="language-"],
  pre[class*="language-"] {
    text-shadow: none;
  }
}


// Inline code
:not(pre) > code[class*="language-"] {
  padding: 4px 7px;
  border-radius: 0.3em;
  white-space: normal;
}

// token
.token {
  color: $pink;
  &.script {
    color: $foreground;
  }
  &.bold {
    font-weight: bold;
  }
  &.italic {
    font-style: italic;
  }
  &.atrule,
  &.attr-name,
  &.attr-value {
    color: $green;
  }
  &.boolean {
    color: $purple;
  }
  &.builtin,
  &.class-name {
    color: $cyan;
  }
  &.comment {
    color: $comment;
  }
  &.constant {
    color: $purple;
  }
  &.entity {
    color: $pink;
  }
  &.function {
    color: $green;
  }
  &.important,
  &.keyword {
    color: $pink;
  }
  &.package {
    color: $cyan;
  }
  &.prolog {
    color: $foreground;
  }
  &.property {
    color: $orange;
  }
  &.punctuation {
    color: $foreground;
  }
  &.selector {
    color: $pink;
  }
  &.regex {
    color: $red;
  }
  &.string {
    color: $yellow;
  }
  &.tag {
    color: $pink;
  }
  &.url {
    color: $cyan;
  }
  &.variable {
    color: $comment;
  }
  &.number {
    color: rgb(101, 49, 175);
  }
  &.operator {
    color: rgba(139, 233, 253, 1);
  }
  &.char {
    color: rgba(255, 135, 157, 1);
  }
  &.symbol {
    color: rgba(255, 184, 108, 1);
  }
  &.deleted {
    color: #e2777a;
  }
  &.namespace {
    color: #e2777a;
  }
  &.variable {
    color: $purple;
  }
}

// css
code[class*="language-"].language-css {
  color: $purple;
  .token {
    color: $pink;
    &.atrule {
      color: $purple;
    }
    &.entity {
      color: $green;
    }
    &.function {
      color: $cyan;
    }
    &.property {
      color: $cyan;
    }
    &.punctuation {
      color: $foreground;
    }
    &.selector {
      color: $green;
    }
    &.rule:not(.atrule) {
      color: $foreground;
    }
    &.url {
      color: $orange;
    }
  }
}

// html
.language-html,
.language-markup {
  .token {
    &.attr-value {
      color: $yellow;
    }
    &.entity {
      &.named-entity {
        color: $purple;
      }
      &:not(.named-entity) {
        color: $pink;
      }
    }
    &.punctuation {
      color: $foreground;
    }
  }
}

// javascript
.language-javascript {
  .token {
    &.constant {
      color: $orange;
      font-style: italic;
    }
  }
}
